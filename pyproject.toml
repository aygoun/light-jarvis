[project]
name = "jarvis"
version = "0.1.0"
description = "AI Assistant like Jarvis with clean architecture and service separation"
authors = [
    {name = "Armand Blin", email = "armand.blin@gmail.com"},
]
dependencies = [
    "jarvis-shared",
    "jarvis-main-orchestrator",
    "jarvis-mcp-orchestrator",
    "jarvis-whisper-service",
    "jarvis-llm",
    "typer>=0.12.0",
    "rich>=13.7.0",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.20",
    "jarvis-hue",
]
requires-python = ">=3.11"

[project.scripts]
jarvis = "jarvis_main_orchestrator.cli:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["ui"]

[tool.uv.workspace]
members = [
    "packages/shared",
    "packages/llm-service",
    "packages/mcp-orchestrator",
    "packages/whisper-service",
    "packages/main-orchestrator",
    "packages/tools/gmail-tool",
    "packages/tools/calendar-tool",
    "packages/tools/notification-tool",
    "packages/tools/hue-tool",
]

[tool.uv.sources]
jarvis-shared = { workspace = true }
jarvis-llm = { workspace = true }
jarvis-mcp-orchestrator = { workspace = true }
jarvis-whisper-service = { workspace = true }
jarvis-main-orchestrator = { workspace = true }
jarvis-gmail = { workspace = true }
jarvis-calendar = { workspace = true }
jarvis-notification = { workspace = true }
jarvis-hue = { workspace = true, editable = true }

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.0",
    "black>=24.0.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "safety>=3.0.0",
    "bandit>=1.7.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=jarvis_shared",
    "--cov=jarvis_core", 
    "--cov=jarvis_llm",
    "--cov=jarvis_mcp",
    "--cov=jarvis_gmail",
    "--cov=jarvis_calendar",
    "--cov=jarvis_notification",
    "--cov=jarvis_hue",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["packages/"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
